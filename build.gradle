buildscript {
    ext.kotlin_version = '1.3.72'
    ext.ktor_version = '1.3.2'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id("io.gitlab.arturbosch.detekt").version("1.10.0")
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'jacoco'

group 'com.github.dripolles'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    jcenter()
}

mainClassName = 'com.github.dripolles.projectk.MainKt'

test {
    useJUnitPlatform()
    testLogging.events = ["passed", "skipped", "failed", "standardOut", "standardError"]
    afterSuite { desc, result ->
        if (!desc.parent) { // will match the outermost suite
            def output = "\nResults: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} passed, ${result.failedTestCount} failed, ${result.skippedTestCount} skipped)"
            println(output)
        }
    }
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.apache.logging.log4j:log4j-api-kotlin:1.0.0"
    implementation "org.apache.logging.log4j:log4j-core:2.11.1"
    implementation "org.apache.logging.log4j:log4j-api:2.11.1"
    implementation "org.slf4j:slf4j-simple:1.7.30"

    implementation "org.kodein.di:kodein-di:7.0.0"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "io.ktor:ktor-auth:$ktor_version"
    implementation "io.ktor:ktor-pebble:$ktor_version"



    detektPlugins "io.gitlab.arturbosch.detekt:detekt-formatting:1.10.0"

    testCompile "org.junit.jupiter:junit-jupiter:5.6.2"
    testCompile("io.ktor:ktor-server-test-host:$ktor_version") {
        exclude group: "ch.qos.logback"
    }

    testImplementation "io.mockk:mockk:1.10.0"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

detekt {
    toolVersion = "1.10.0"
    config = files(".detekt.yml")
}
